class XMLRPCHandler:
    """
    Example implementation for login handling
    """

    def __init__(self):
        self.sessions    = dict()
        self.session_key = os.urandom(32)
        
    def _find_session_by_username(self, username):
        for session in self.sessions.itervalues():
            if session["username"] == username:
                return session

    def _invalidate_session_id(self, session_id):
        try:
            del self.sessions[session_id]
        except KeyError:
            pass

    def _clear_expired_sessions(self):
        for session_id in self.sessions.keys():
            last_visit = self.sessions[session_id]["last_visit"]
            if is_timestamp_expired(last_visit):
                self._invalidate_session_id(session_id)

    def _generate_session_id(self, username):
        return hmac.new(self.session_key, username + str(uuid.uuid4()), sha256).hexdigest()

    @require_login
    def logout(self, sid):
      self._invalidate_session_id(sid)
      
    @require_login
    def setImage(self, sid, image):
      self.sessions['sid']['image'] = image
      
    @require_login
    def getConfig(self, sid):
      

    def login(self, username, password):
        """
        Handle the login procedure. If the login is successful the session id is returned
        otherwise a xmlrpclib.Fault exception is raised.

        Args:
            username: The username
            password: The password

        Returns:
            A valid session id

        Raises:
            A xmlrpclib.Fault exception is raised
        """

        # Check if a session with the username exists
        session = self._find_session_by_username(username)
        if session:
            if is_timestamp_expired(session["last_visit"]):
                self._invalidate_session_id(session["session_id"])
            else:
                if self.users[username] == password:
                    return session["session_id"]

        # check username and password
        if self.users.has_key(username):
            if self.users[username] == password:
                # generate session id and save it
                session_id = self._generate_session_id(username)
                self.sessions[session_id] = {"username"  : username,
                                             "session_id": session_id,
                                             "last_visit": get_timestamp()}

                return session_id

        raise Fault("unknown username or password", "Please check your username and password")